//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Forms.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Data", Namespace="http://schemas.datacontract.org/2004/07/UtilsNET")]
    [System.SerializableAttribute()]
    public partial class Data : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BDate {
            get {
                return this.BDateField;
            }
            set {
                if ((this.BDateField.Equals(value) != true)) {
                    this.BDateField = value;
                    this.RaisePropertyChanged("BDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SYear {
            get {
                return this.SYearField;
            }
            set {
                if ((this.SYearField.Equals(value) != true)) {
                    this.SYearField = value;
                    this.RaisePropertyChanged("SYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Spec {
            get {
                return this.SpecField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecField, value) != true)) {
                    this.SpecField = value;
                    this.RaisePropertyChanged("Spec");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDict", ReplyAction="http://tempuri.org/IService1/GetDictResponse")]
        Forms.ServiceReference2.Data[] GetDict();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDict", ReplyAction="http://tempuri.org/IService1/GetDictResponse")]
        System.Threading.Tasks.Task<Forms.ServiceReference2.Data[]> GetDictAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDict", ReplyAction="http://tempuri.org/IService1/AddDictResponse")]
        void AddDict(Forms.ServiceReference2.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddDict", ReplyAction="http://tempuri.org/IService1/AddDictResponse")]
        System.Threading.Tasks.Task AddDictAsync(Forms.ServiceReference2.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UdpDict", ReplyAction="http://tempuri.org/IService1/UdpDictResponse")]
        void UdpDict(Forms.ServiceReference2.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UdpDict", ReplyAction="http://tempuri.org/IService1/UdpDictResponse")]
        System.Threading.Tasks.Task UdpDictAsync(Forms.ServiceReference2.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelDict", ReplyAction="http://tempuri.org/IService1/DelDictResponse")]
        void DelDict(Forms.ServiceReference2.Data data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelDict", ReplyAction="http://tempuri.org/IService1/DelDictResponse")]
        System.Threading.Tasks.Task DelDictAsync(Forms.ServiceReference2.Data data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Forms.ServiceReference2.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Forms.ServiceReference2.IService1>, Forms.ServiceReference2.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Forms.ServiceReference2.Data[] GetDict() {
            return base.Channel.GetDict();
        }
        
        public System.Threading.Tasks.Task<Forms.ServiceReference2.Data[]> GetDictAsync() {
            return base.Channel.GetDictAsync();
        }
        
        public void AddDict(Forms.ServiceReference2.Data data) {
            base.Channel.AddDict(data);
        }
        
        public System.Threading.Tasks.Task AddDictAsync(Forms.ServiceReference2.Data data) {
            return base.Channel.AddDictAsync(data);
        }
        
        public void UdpDict(Forms.ServiceReference2.Data data) {
            base.Channel.UdpDict(data);
        }
        
        public System.Threading.Tasks.Task UdpDictAsync(Forms.ServiceReference2.Data data) {
            return base.Channel.UdpDictAsync(data);
        }
        
        public void DelDict(Forms.ServiceReference2.Data data) {
            base.Channel.DelDict(data);
        }
        
        public System.Threading.Tasks.Task DelDictAsync(Forms.ServiceReference2.Data data) {
            return base.Channel.DelDictAsync(data);
        }
    }
}
